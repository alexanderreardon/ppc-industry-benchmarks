{"version":3,"sources":["MetricDropdown.js","NetworkDropdown.js","BarChart.js","App.js","serviceWorker.js","index.js"],"names":["MetricDropdown","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","handleChange","e","props","onChange","target","value","inherits","createClass","key","react_default","a","createElement","id","Component","NetworkDropdown","bind","industries","names","backgroundColors","borderColors","searchCpc","labels","datasets","label","data","backgroundColor","borderWidth","borderColor","displayCpc","searchCtr","displayCtr","searchConvRate","displayConvRate","searchCpa","displayCpa","dollarMetrics","percentMetrics","optionsTemplate","title","display","text","fontSize","fontColor","fontFamily","padding","legend","scales","yAxes","ticks","callback","beginAtZero","xAxes","autoSkip","BarChart","_ref","metric","network","es","toFixed","includes","options","redraw","App","state","metricValue","setState","networkValue","className","src_MetricDropdown","metricFilterUpdate","src_NetworkDropdown","networkFilterUpdate","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c534a10f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport class MetricDropdown extends Component {\r\n  \r\n    handleChange = (e) => {\r\n        // this.setState({ metric: e.target.value });\r\n        this.props.onChange(e.target.value);\r\n    }\r\n\r\n  \r\n    render() {\r\n        return (\r\n        <select\r\n            id=\"metric-dropdown\"\r\n            onChange={this.handleChange} >\r\n            <option value=\"click-thru-rate\">Click-Thru Rate</option>\r\n            <option value=\"cost-per-click\">Cost Per Click</option>\r\n            <option value=\"conversion-rate\">Conversion Rate</option>\r\n            <option value=\"cost-per-conversion\">Cost Per Conversion</option>\r\n        </select>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MetricDropdown;\r\n","import React, { Component } from 'react';\r\n\r\nexport class NetworkDropdown extends Component {\r\n\r\n    handleChange = (e) => {\r\n      // this.setState({ network: e.target.value});\r\n      this.props.onChange(e.target.value);\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <select \r\n            id=\"network-dropdown\"\r\n            onChange={this.handleChange.bind(this)} >\r\n            <option value=\"search\" >Google Search Ads</option>\r\n            <option value=\"display\" >Google Display Ads</option>\r\n        </select>\r\n      )\r\n    }\r\n}\r\n\r\nexport default NetworkDropdown;\r\n","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nconst industries = {\r\n    names: ['Advocacy','Auto','B2B','Consumer Services','Dating & Personals','E-Commerce','Education','Employment Services','Finance & Insurance','Health & Medical','Home Goods','Industrial Services','Legal','Real Estate','Technology','Travel & Hospitality'],\r\n    backgroundColors: [\r\n      'rgba(59, 117, 93,0.4)',\r\n      'rgba(106, 108, 192, 0.4)',\r\n      'rgba(206, 225, 66, 0.4)',\r\n      'rgba(226, 112, 61, 0.4)',\r\n      'rgba(192, 54, 35, 0.4)',\r\n      'rgba(37, 120, 180, 0.4)',\r\n      'rgba(153, 156, 167, 0.4)',\r\n      'rgba(187, 71, 169, 0.4)',\r\n      'rgba(44, 114, 125, 0.4)',\r\n      'rgba(0, 0, 0, 0.4)',\r\n      'rgba(80, 70, 87, 0.4)',\r\n      'rgba(84, 168, 61, 0.4)',\r\n      'rgba(227, 143, 76, 0.4)',\r\n      'rgba(60, 84, 147, 0.4)',\r\n      'rgba(144, 210, 189, 0.4)',\r\n      'rgba(213, 132, 210, 0.4)'],\r\n    borderColors: ['rgba(59, 117, 93,1)','rgba(106, 108, 192, 1)','rgba(206, 225, 66, 1)',\r\n      'rgba(226, 112, 61, 1)',\r\n      'rgba(192, 54, 35, 1)',\r\n      'rgba(37, 120, 180, 1)',\r\n      'rgba(153, 156, 167, 1)',\r\n      'rgba(187, 71, 169, 1)',\r\n      'rgba(44, 114, 125, 1)',\r\n      'rgba(0, 0, 0, 1)',\r\n      'rgba(80, 70, 87, 1)',\r\n      'rgba(84, 168, 61, 1)',\r\n      'rgba(227, 143, 76, 1)',\r\n      'rgba(60, 84, 147, 1)',\r\n      'rgba(144, 210, 189, 1)',\r\n      'rgba(213, 132, 210, 1)']\r\n  }\r\n  \r\nconst searchCpc = {\r\n    labels: industries.names,\r\n    datasets: [ {\r\n      label: 'Search Cost-Per-Click',\r\n      data: [1.43, 2.46, 3.33, 6.40, 2.78, 1.16, 2.40, 2.04, 3.44, 2.62, 2.94, 2.56, 6.75, 2.37, 3.80, 1.53],\r\n      backgroundColor: industries.backgroundColors,\r\n      borderWidth: 3,\r\n      borderColor: industries.borderColors\r\n    } ]\r\n  };\r\nconst displayCpc = {\r\n    labels: industries.names,\r\n    datasets: [ {\r\n      label: 'Display Cost-Per-Click',\r\n      data: [0.62, 0.58, 0.79, 0.81, 1.49, 0.45, 0.47, 0.78, 0.86, 0.63, 0.60, 0.54, 0.72, 0.75, 0.51, 0.44],\r\n      backgroundColor: industries.backgroundColors,\r\n      borderWidth: 3,\r\n      borderColor: industries.borderColors\r\n    } ]\r\n  };\r\nconst searchCtr = {\r\n    labels: industries.names,\r\n    datasets: [ {\r\n      label: 'Search Click-Thru Rate',\r\n      data: [4.41, 4, 2.41, 2.41, 6.05, 2.69, 3.78, 2.42, 2.91, 3.27, 2.44, 2.61, 2.93, 3.71, 2.09, 4.68],\r\n      backgroundColor: industries.backgroundColors,\r\n      borderWidth: 3,\r\n      borderColor: industries.borderColors\r\n    } ]\r\n  };\r\nconst displayCtr = {\r\n    labels: industries.names,\r\n    datasets: [ {\r\n      label: 'Display Click-Thru Rate',\r\n      data: [0.59, 0.60, 0.46, 0.51, 0.72, 0.51, 0.53, 0.59, 0.52, 0.59, 0.49, 0.50, 0.59, 1.08, 0.39, 0.47],\r\n      backgroundColor: industries.backgroundColors,\r\n      borderWidth: 3,\r\n      borderColor: industries.borderColors\r\n    } ]\r\n  };\r\nconst searchConvRate = {\r\n    labels: industries.names,\r\n    datasets: [ {\r\n      label: 'Search Conversion Rate',\r\n      data: [1.96, 6.03, 3.04, 6.64, 9.64, 2.81, 3.39, 5.13, 5.10, 3.36, 2.70, 3.37, 6.98, 2.47, 2.92, 3.55],\r\n      backgroundColor: industries.backgroundColors,\r\n      borderWidth: 3,\r\n      borderColor: industries.borderColors\r\n    } ]\r\n  };\r\nconst displayConvRate = {\r\n    labels: industries.names,\r\n    datasets: [ {\r\n      label: 'Display Conversion Rate',\r\n      data: [1.00, 1.19, 0.80, 0.98, 3.34, 0.59, 0.50, 1.57, 1.19, 0.82, 0.43, 0.94, 1.84, 0.80, 0.86, 0.51],\r\n      backgroundColor: industries.backgroundColors,\r\n      borderWidth: 3,\r\n      borderColor: industries.borderColors\r\n    } ]\r\n  };\r\nconst searchCpa = {\r\n    labels: industries.names,\r\n    datasets: [ {\r\n      label: 'Search Cost-Per-Conversion',\r\n      data: [96.55, 33.52, 116.13, 90.70, 76.76, 45.27, 72.70, 48.04, 81.93, 78.09, 87.13, 79.28, 86.02, 116.61, 133.52, 44.73],\r\n      backgroundColor: industries.backgroundColors,\r\n      borderWidth: 3,\r\n      borderColor: industries.borderColors\r\n    } ]\r\n  };\r\nconst displayCpa = {\r\n    labels: industries.names,\r\n    datasets: [ {\r\n      label: 'Display Cost-Per-Conversion',\r\n      data: [70.69, 23.68, 130.36, 60.48, 60.23, 65.80, 143.36, 59.47, 56.76, 72.58, 116.17, 51.58, 39.52, 74.79, 103.60, 99.13],\r\n      backgroundColor: industries.backgroundColors,\r\n      borderWidth: 3,\r\n      borderColor: industries.borderColors\r\n    } ]\r\n  };\r\n  \r\n\r\nconst dollarMetrics = ['cost-per-click', 'cost-per-conversion'];\r\nconst percentMetrics = ['click-thru-rate', 'conversion-rate'];\r\n\r\n\r\n\r\nlet optionsTemplate =  {\r\n    title: {\r\n      display: true,\r\n      text: 'Google Advertising Industry Standards',\r\n      fontSize: 25,\r\n      fontColor: '#136598',\r\n      fontFamily: \"'Lato', 'Open Sans', sans-serif\",\r\n      padding: 15\r\n    },\r\n    legend: {\r\n      display: false\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            callback: function(value) {\r\n\r\n            }\r\n          },\r\n          beginAtZero: true\r\n        }\r\n      ],\r\n      xAxes: [\r\n        {\r\n          ticks: {\r\n            // Prevents only showing a couple industry names\r\n            autoSkip: false\r\n          }\r\n        }\r\n      ],\r\n    },\r\n  };\r\n\r\n\r\nexport default ( { metric, network } ) => {\r\n    \r\n    \r\n    var chartData = function() {\r\n        optionsTemplate.scales.yAxes[0].ticks.callback = (value) => {\r\n            value.toFixed(2);\r\n            if (dollarMetrics.includes(metric)) {\r\n                return '$' + value.toFixed(2);\r\n            } else if (percentMetrics.includes(metric)) {\r\n                return value.toFixed(2) + '%';\r\n            }\r\n        };\r\n\r\n        optionsTemplate.scales.yAxes[0].ticks.beginAtZero = true;\r\n        \r\n        if (metric === 'cost-per-click' && network === 'search') {\r\n            // Change the title dynamically\r\n            // optionsTemplate.title.text = 'Avg. CPC on Google Search Network';\r\n            return searchCpc\r\n        } else if (metric === 'cost-per-click' && network === 'display') {\r\n          return displayCpc\r\n        } else if (metric === 'click-thru-rate' && network === 'search') {\r\n          return searchCtr\r\n        } else if (metric === 'click-thru-rate' && network === 'display') {\r\n          return displayCtr\r\n        } else if (metric === 'conversion-rate' && network === 'search') {\r\n          return searchConvRate\r\n        } else if (metric === 'conversion-rate' && network === 'display') {\r\n          return displayConvRate\r\n        } else if (metric === 'cost-per-conversion' && network === 'search') {\r\n          return searchCpa\r\n        } else if (metric === 'cost-per-conversion' && network === 'display') {\r\n          return displayCpa\r\n        }\r\n    }\r\n\r\n    return (\r\n    <div>\r\n        <Bar data={chartData} options={optionsTemplate} redraw />\r\n    </div>\r\n    )\r\n};\r\n\r\n","import React, { Component } from 'react';\nimport MetricDropdown from './MetricDropdown.js';\nimport NetworkDropdown from './NetworkDropdown.js';\nimport BarChart from './BarChart.js';\nimport './App.css';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      metric: 'click-thru-rate',\n      network: 'search'\n    }\n  }\n\n  metricFilterUpdate(metricValue) {\n    this.setState({\n      metric: metricValue,\n    });\n  }\n  \n  networkFilterUpdate(networkValue) {\n    this.setState({\n      network: networkValue,\n    })\n  }\n\n  render() {\n\n    return (\n\n      <div className=\"myApp\" >\n        <div className=\"dropdowns\">\n          <MetricDropdown onChange={this.metricFilterUpdate.bind(this)} />\n          <NetworkDropdown onChange={this.networkFilterUpdate.bind(this)} />\n        </div>\n        <br />\n        <BarChart metric={this.state.metric} network={this.state.network} />\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}