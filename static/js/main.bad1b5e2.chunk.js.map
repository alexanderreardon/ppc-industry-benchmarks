{"version":3,"sources":["MetricDropdown.js","NetworkDropdown.js","App.js","serviceWorker.js","index.js"],"names":["MetricDropdown","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","handleChange","e","setState","metric","target","value","props","onChange","inherits","createClass","key","react_default","a","createElement","id","Component","NetworkDropdown","network","bind","industries","names","backgroundColors","borderColors","searchCpc","labels","datasets","label","data","backgroundColor","borderWidth","borderColor","displayCpc","searchCtr","displayCtr","searchConvRate","displayConvRate","searchCpa","displayCpa","optionsTemplate","title","display","text","fontSize","fontColor","fontFamily","padding","legend","scales","yAxes","ticks","callback","xAxes","autoSkip","App","state","chartData","getChartData","console","log","refs","chart","chartInstance","nextProps","forceUpdate","metricValue","networkValue","className","src_MetricDropdown","metricFilterUpdate","src_NetworkDropdown","networkFilterUpdate","es","ref","options","redraw","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bad1b5e2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport class MetricDropdown extends Component {\r\n  \r\n    handleChange = (e) => {\r\n        this.setState({ metric: e.target.value});\r\n        this.props.onChange(e.target.value);\r\n    }\r\n\r\n  \r\n    render() {\r\n        return (\r\n        <select\r\n            id=\"metric-dropdown\"\r\n            onChange={this.handleChange} >\r\n            <option value=\"click-thru-rate\">Click-Thru Rate</option>\r\n            <option value=\"cost-per-click\">Cost Per Click</option>\r\n            <option value=\"conversion-rate\">Conversion Rate</option>\r\n            <option value=\"cost-per-conversion\">Cost Per Conversion</option>\r\n        </select>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MetricDropdown;\r\n","import React, { Component } from 'react';\r\n\r\nexport class NetworkDropdown extends Component {\r\n\r\n    handleChange = (e) => {\r\n      this.setState({ network: e.target.value});\r\n      this.props.onChange(e.target.value);\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <select \r\n            id=\"network-dropdown\"\r\n            onChange={this.handleChange.bind(this)} >\r\n            <option value=\"search\" >Google Search Ads</option>\r\n            <option value=\"display\" >Google Display Ads</option>\r\n        </select>\r\n      )\r\n    }\r\n}\r\n\r\nexport default NetworkDropdown;\r\n","import React, { Component } from 'react';\nimport MetricDropdown from './MetricDropdown.js';\nimport NetworkDropdown from './NetworkDropdown.js';\nimport {Bar} from 'react-chartjs-2';\nimport './App.css';\n\nconst industries = {\n  names: ['Advocacy','Auto','B2B','Consumer Services','Dating & Personals','E-Commerce','Education','Employment Services','Finance & Insurance','Health & Medical','Home Goods','Industrial Services','Legal','Real Estate','Technology','Travel & Hospitality'],\n  backgroundColors: [\n    'rgba(59, 117, 93,0.4)',\n    'rgba(106, 108, 192, 0.4)',\n    'rgba(206, 225, 66, 0.4)',\n    'rgba(226, 112, 61, 0.4)',\n    'rgba(192, 54, 35, 0.4)',\n    'rgba(37, 120, 180, 0.4)',\n    'rgba(153, 156, 167, 0.4)',\n    'rgba(187, 71, 169, 0.4)',\n    'rgba(44, 114, 125, 0.4)',\n    'rgba(0, 0, 0, 0.4)',\n    'rgba(80, 70, 87, 0.4)',\n    'rgba(84, 168, 61, 0.4)',\n    'rgba(227, 143, 76, 0.4)',\n    'rgba(60, 84, 147, 0.4)',\n    'rgba(144, 210, 189, 0.4)',\n    'rgba(213, 132, 210, 0.4)'],\n  borderColors: ['rgba(59, 117, 93,1)','rgba(106, 108, 192, 1)','rgba(206, 225, 66, 1)',\n    'rgba(226, 112, 61, 1)',\n    'rgba(192, 54, 35, 1)',\n    'rgba(37, 120, 180, 1)',\n    'rgba(153, 156, 167, 1)',\n    'rgba(187, 71, 169, 1)',\n    'rgba(44, 114, 125, 1)',\n    'rgba(0, 0, 0, 1)',\n    'rgba(80, 70, 87, 1)',\n    'rgba(84, 168, 61, 1)',\n    'rgba(227, 143, 76, 1)',\n    'rgba(60, 84, 147, 1)',\n    'rgba(144, 210, 189, 1)',\n    'rgba(213, 132, 210, 1)']\n}\n\nconst searchCpc = {\n  labels: industries.names,\n  datasets: [ {\n    label: 'Search Cost-Per-Click',\n    data: [1.43, 2.46, 3.33, 6.40, 2.78, 1.16, 2.40, 2.04, 3.44, 2.62, 2.94, 2.56, 6.75, 2.37, 3.80, 1.53],\n    backgroundColor: industries.backgroundColors,\n    borderWidth: 3,\n    borderColor: industries.borderColors\n  } ]\n};\nconst displayCpc = {\n  labels: industries.names,\n  datasets: [ {\n    label: 'Display Cost-Per-Click',\n    data: [0.62, 0.58, 0.79, 0.81, 1.49, 0.45, 0.47, 0.78, 0.86, 0.63, 0.60, 0.54, 0.72, 0.75, 0.51, 0.44],\n    backgroundColor: industries.backgroundColors,\n    borderWidth: 3,\n    borderColor: industries.borderColors\n  } ]\n};\nconst searchCtr = {\n  labels: industries.names,\n  datasets: [ {\n    label: 'Search Click-Thru Rate',\n    data: [4.41, 4, 2.41, 2.41, 6.05, 2.69, 3.78, 2.42, 2.91, 3.27, 2.44, 2.61, 2.93, 3.71, 2.09, 4.68],\n    backgroundColor: industries.backgroundColors,\n    borderWidth: 3,\n    borderColor: industries.borderColors\n  } ]\n};\nconst displayCtr = {\n  labels: industries.names,\n  datasets: [ {\n    label: 'Display Click-Thru Rate',\n    data: [0.59, 0.60, 0.46, 0.51, 0.72, 0.51, 0.53, 0.59, 0.52, 0.59, 0.49, 0.50, 0.59, 1.08, 0.39, 0.47],\n    backgroundColor: industries.backgroundColors,\n    borderWidth: 3,\n    borderColor: industries.borderColors\n  } ]\n};\nconst searchConvRate = {\n  labels: industries.names,\n  datasets: [ {\n    label: 'Search Conversion Rate',\n    data: [1.96, 6.03, 3.04, 6.64, 9.64, 2.81, 3.39, 5.13, 5.10, 3.36, 2.70, 3.37, 6.98, 2.47, 2.92, 3.55],\n    backgroundColor: industries.backgroundColors,\n    borderWidth: 3,\n    borderColor: industries.borderColors\n  } ]\n};\nconst displayConvRate = {\n  labels: industries.names,\n  datasets: [ {\n    label: 'Display Conversion Rate',\n    data: [1.00, 1.19, 0.80, 0.98, 3.34, 0.59, 0.50, 1.57, 1.19, 0.82, 0.43, 0.94, 1.84, 0.80, 0.86, 0.51],\n    backgroundColor: industries.backgroundColors,\n    borderWidth: 3,\n    borderColor: industries.borderColors\n  } ]\n};\nconst searchCpa = {\n  labels: industries.names,\n  datasets: [ {\n    label: 'Search Cost-Per-Conversion',\n    data: [96.55, 33.52, 116.13, 90.70, 76.76, 45.27, 72.70, 48.04, 81.93, 78.09, 87.13, 79.28, 86.02, 116.61, 133.52, 44.73],\n    backgroundColor: industries.backgroundColors,\n    borderWidth: 3,\n    borderColor: industries.borderColors\n  } ]\n};\nconst displayCpa = {\n  labels: industries.names,\n  datasets: [ {\n    label: 'Display Cost-Per-Conversion',\n    data: [70.69, 23.68, 130.36, 60.48, 60.23, 65.80, 143.36, 59.47, 56.76, 72.58, 116.17, 51.58, 39.52, 74.79, 103.60, 99.13],\n    backgroundColor: industries.backgroundColors,\n    borderWidth: 3,\n    borderColor: industries.borderColors\n  } ]\n};\n\nlet dataTemplate = {\n  labels: industries.names,\n  datasets: [ {\n    label: '',\n    data: [],\n    backgroundColor: industries.backgroundColors,\n    borderWidth: 3,\n    borderColor: industries.borderColors\n  } ]\n};\nlet optionsTemplate =  {\n  title: {\n    display: true,\n    text: 'Google Advertising Industry Standards',\n    fontSize: 25,\n    fontColor: '#136598',\n    fontFamily: \"'Lato', 'Open Sans', sans-serif\",\n    padding: 15\n  },\n  legend: {\n    display: false\n  },\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          callback: function(value) {\n            return value + \"%\"\n          }\n        }\n      }\n    ],\n    xAxes: [\n      {\n        ticks: {\n          autoSkip: false\n        }\n      }\n    ],\n  },\n};\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      metric: 'click-thru-rate',\n      network: 'search',\n      chartData: searchCtr\n    }\n  }\n  \n  componentWillMount () {\n    this.getChartData();\n  }\n\n  componentDidMount() {\n    console.log(this.refs.chart.chartInstance)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps) {\n      this.getChartData();\n    }\n  }\n\n  getChartData() {\n    if (this.state.metric === 'cost-per-click' && this.state.network === 'search') {\n      this.setState({ chartData: searchCpc })\n    } else if (this.state.metric === 'cost-per-click' && this.state.network === 'display') {\n      this.setState({ chartData: displayCpc })\n    } else if (this.state.metric === 'click-thru-rate' && this.state.network === 'search') {\n      this.setState({ chartData: searchCtr })\n    } else if (this.state.metric === 'click-thru-rate' && this.state.network === 'display') {\n      this.setState({ chartData: displayCtr })\n    } else if (this.state.metric === 'conversion-rate' && this.state.network === 'search') {\n      this.setState({ chartData: searchConvRate })\n    } else if (this.state.metric === 'conversion-rate' && this.state.network === 'display') {\n      this.setState({ chartData: displayConvRate })\n    } else if (this.state.metric === 'cost-per-conversion' && this.state.network === 'search') {\n      this.setState({ chartData: searchCpa })\n    } else if (this.state.metric === 'cost-per-conversion' && this.state.network === 'display') {\n      this.setState({ chartData: displayCpa })\n    }\n    this.forceUpdate();\n  }\n\n  metricFilterUpdate(metricValue) {\n    this.setState({\n      metric: metricValue,\n    });\n    this.getChartData();\n    this.forceUpdate();\n  }\n  \n  networkFilterUpdate(networkValue) {\n    this.setState({\n      network: networkValue,\n    })\n    this.getChartData();\n    this.forceUpdate();\n  }\n\n  render() {\n\n    return (\n\n      <div className=\"myApp\" >\n        <div className=\"dropdowns\">\n          <MetricDropdown onChange={this.metricFilterUpdate.bind(this)} />\n          <NetworkDropdown onChange={this.networkFilterUpdate.bind(this)} />\n        </div>\n        <br />\n        <Bar ref='chart' data={this.state.chartData} options={optionsTemplate} redraw />\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}